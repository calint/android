%!PS-Adobe-2.0
%%Title: bench.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Wed Mar  9 07:17:58 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -26 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (bench.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (calin)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar  9 07:17:58 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(monospace) findfont 80 scalefont setfont
1.000 UL
LTb
536 256 M
63 0 V
6480 0 R
-63 0 V
stroke
488 256 M
[ [(monospace) 80.0 0.0 true true 0 ( 0)]
] -26.7 MRshow
1.000 UL
LTb
536 710 M
63 0 V
6480 0 R
-63 0 V
stroke
488 710 M
[ [(monospace) 80.0 0.0 true true 0 ( 1000)]
] -26.7 MRshow
1.000 UL
LTb
536 1165 M
63 0 V
6480 0 R
-63 0 V
stroke
488 1165 M
[ [(monospace) 80.0 0.0 true true 0 ( 2000)]
] -26.7 MRshow
1.000 UL
LTb
536 1619 M
63 0 V
6480 0 R
-63 0 V
stroke
488 1619 M
[ [(monospace) 80.0 0.0 true true 0 ( 3000)]
] -26.7 MRshow
1.000 UL
LTb
536 2073 M
63 0 V
6480 0 R
-63 0 V
stroke
488 2073 M
[ [(monospace) 80.0 0.0 true true 0 ( 4000)]
] -26.7 MRshow
1.000 UL
LTb
536 2527 M
63 0 V
6480 0 R
-63 0 V
stroke
488 2527 M
[ [(monospace) 80.0 0.0 true true 0 ( 5000)]
] -26.7 MRshow
1.000 UL
LTb
536 2982 M
63 0 V
6480 0 R
-63 0 V
stroke
488 2982 M
[ [(monospace) 80.0 0.0 true true 0 ( 6000)]
] -26.7 MRshow
1.000 UL
LTb
536 3436 M
63 0 V
6480 0 R
-63 0 V
stroke
488 3436 M
[ [(monospace) 80.0 0.0 true true 0 ( 7000)]
] -26.7 MRshow
1.000 UL
LTb
536 3890 M
63 0 V
6480 0 R
-63 0 V
stroke
488 3890 M
[ [(monospace) 80.0 0.0 true true 0 ( 8000)]
] -26.7 MRshow
1.000 UL
LTb
536 4345 M
63 0 V
6480 0 R
-63 0 V
stroke
488 4345 M
[ [(monospace) 80.0 0.0 true true 0 ( 9000)]
] -26.7 MRshow
1.000 UL
LTb
536 4799 M
63 0 V
6480 0 R
-63 0 V
stroke
488 4799 M
[ [(monospace) 80.0 0.0 true true 0 ( 10000)]
] -26.7 MRshow
1.000 UL
LTb
536 256 M
0 63 V
0 4480 R
0 -63 V
stroke
536 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 0)]
] -26.7 MCshow
1.000 UL
LTb
1190 256 M
0 63 V
0 4480 R
0 -63 V
stroke
1190 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 1000)]
] -26.7 MCshow
1.000 UL
LTb
1845 256 M
0 63 V
0 4480 R
0 -63 V
stroke
1845 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 2000)]
] -26.7 MCshow
1.000 UL
LTb
2499 256 M
0 63 V
0 4480 R
0 -63 V
stroke
2499 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 3000)]
] -26.7 MCshow
1.000 UL
LTb
3153 256 M
0 63 V
0 4480 R
0 -63 V
stroke
3153 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 4000)]
] -26.7 MCshow
1.000 UL
LTb
3807 256 M
0 63 V
0 4480 R
0 -63 V
stroke
3807 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 5000)]
] -26.7 MCshow
1.000 UL
LTb
4462 256 M
0 63 V
0 4480 R
0 -63 V
stroke
4462 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 6000)]
] -26.7 MCshow
1.000 UL
LTb
5116 256 M
0 63 V
0 4480 R
0 -63 V
stroke
5116 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 7000)]
] -26.7 MCshow
1.000 UL
LTb
5770 256 M
0 63 V
0 4480 R
0 -63 V
stroke
5770 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 8000)]
] -26.7 MCshow
1.000 UL
LTb
6425 256 M
0 63 V
0 4480 R
0 -63 V
stroke
6425 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 9000)]
] -26.7 MCshow
1.000 UL
LTb
7079 256 M
0 63 V
0 4480 R
0 -63 V
stroke
7079 176 M
[ [(monospace) 80.0 0.0 true true 0 ( 10000)]
] -26.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
536 4799 N
536 256 L
6543 0 V
0 4543 V
-6543 0 V
Z stroke
LCb setrgbcolor
112 2527 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(monospace) 80.0 0.0 true true 0 (requests/s)]
] -26.7 MCshow
grestore
LTb
LCb setrgbcolor
3807 56 M
[ [(monospace) 80.0 0.0 true true 0 (connections)]
] -26.7 MCshow
LTb
3807 4919 M
[ [(monospace) 80.0 0.0 true true 0 (static content \(small file\))]
] -26.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6680 4696 M
[ [(monospace) 80.0 0.0 true true 0 (noname)]
] -26.7 MRshow
LT0
537 670 Pls
601 4112 Pls
667 4350 Pls
732 4250 Pls
798 4346 Pls
863 3390 Pls
929 2978 Pls
994 2431 Pls
1059 3056 Pls
1125 3741 Pls
1190 4045 Pls
1517 4034 Pls
1845 3753 Pls
2172 3442 Pls
2499 3586 Pls
2826 3269 Pls
3153 3137 Pls
3480 2871 Pls
3807 2938 Pls
4135 2970 Pls
4462 2712 Pls
4789 2667 Pls
5116 2510 Pls
5443 2664 Pls
5770 2823 Pls
6098 2374 Pls
6855 4696 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
6680 4616 M
[ [(monospace) 80.0 0.0 true true 0 (resin4)]
] -26.7 MRshow
LT1
537 661 Crs
601 3772 Crs
667 3785 Crs
732 3809 Crs
798 3946 Crs
863 3987 Crs
929 3744 Crs
994 2800 Crs
1059 3568 Crs
1125 3423 Crs
1190 3861 Crs
1517 3160 Crs
1845 3175 Crs
2172 2998 Crs
2499 2918 Crs
2826 2866 Crs
3153 2384 Crs
3480 1852 Crs
3807 2115 Crs
4135 2198 Crs
4462 2151 Crs
4789 2008 Crs
5116 1956 Crs
5443 1705 Crs
5770 1552 Crs
6098 1771 Crs
6425 1716 Crs
6752 1620 Crs
7079 1745 Crs
6855 4616 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
LCb setrgbcolor
6680 4536 M
[ [(monospace) 80.0 0.0 true true 0 (glassfish3)]
] -26.7 MRshow
LT2
537 607 Star
601 2956 Star
667 2984 Star
732 2950 Star
798 2882 Star
863 2962 Star
929 2786 Star
994 2444 Star
1059 2462 Star
1125 2713 Star
1190 2751 Star
1517 2828 Star
1845 2451 Star
2172 2656 Star
2499 2522 Star
2826 2564 Star
3153 2523 Star
3480 2312 Star
3807 2428 Star
4135 2329 Star
4462 2297 Star
4789 2208 Star
5116 2264 Star
5443 2177 Star
5770 2221 Star
6098 2096 Star
6425 2008 Star
6752 1858 Star
7079 1890 Star
6855 4536 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LT3
LCb setrgbcolor
6680 4456 M
[ [(monospace) 80.0 0.0 true true 0 (lighttp)]
] -26.7 MRshow
LT3
537 665 Box
601 3932 Box
667 4052 Box
732 3976 Box
798 4005 Box
863 3902 Box
929 4097 Box
994 4087 Box
1059 4077 Box
1125 4079 Box
1190 4057 Box
1517 4014 Box
1845 3782 Box
2172 3631 Box
2499 3615 Box
2826 3301 Box
3153 3101 Box
3480 3296 Box
3807 3120 Box
4135 2616 Box
4462 2448 Box
4789 2489 Box
5116 2516 Box
6855 4456 Box
% End plot #4
% Begin plot #5
1.000 UP
1.000 UL
LT4
LCb setrgbcolor
6680 4376 M
[ [(monospace) 80.0 0.0 true true 0 (orion2)]
] -26.7 MRshow
LT4
537 706 BoxF
601 3877 BoxF
667 4144 BoxF
732 4041 BoxF
798 4147 BoxF
863 4140 BoxF
929 4149 BoxF
994 3753 BoxF
1059 3754 BoxF
1125 4067 BoxF
1190 3883 BoxF
1517 4024 BoxF
1845 3615 BoxF
2172 3336 BoxF
2499 3185 BoxF
2826 3331 BoxF
3153 2850 BoxF
3480 2755 BoxF
3807 2631 BoxF
4135 2563 BoxF
4462 2592 BoxF
4789 2493 BoxF
5116 2412 BoxF
5443 2354 BoxF
5770 2334 BoxF
6098 2326 BoxF
6425 2097 BoxF
6752 2353 BoxF
7079 2223 BoxF
6855 4376 BoxF
% End plot #5
% Begin plot #6
1.000 UP
1.000 UL
LT5
LCb setrgbcolor
6680 4296 M
[ [(monospace) 80.0 0.0 true true 0 (apache2)]
] -26.7 MRshow
LT5
537 647 Circle
601 3850 Circle
667 4000 Circle
732 3165 Circle
798 3069 Circle
863 1887 Circle
929 2281 Circle
994 2504 Circle
1059 669 Circle
1125 2293 Circle
1190 1034 Circle
1517 2328 Circle
1845 1210 Circle
2172 2611 Circle
2499 1226 Circle
2826 319 Circle
3153 989 Circle
3480 256 Circle
3807 322 Circle
4135 294 Circle
4462 258 Circle
5116 273 Circle
5770 257 Circle
6098 1437 Circle
6425 590 Circle
6752 888 Circle
7079 283 Circle
6855 4296 Circle
% End plot #6
1.000 UL
LTb
536 4799 N
536 256 L
6543 0 V
0 4543 V
-6543 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: monospace
%%Pages: 1
